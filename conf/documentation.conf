[general.domain]
type=text
description=<<EOT
Domain name of PacketFence system.
EOT

[general.dnsservers]
type=list
description=<<EOT
Comma-delimited list of DNS servers.
EOT

[general.hostname]
type=text
description=<<EOT
Hostname of PacketFence system. This is concatenated with the domain 
in Apache rewriting rules and therefore must be resolvable by clients.
EOT

[general.dhcpservers]
type=list
description=<<EOT
Comma-delimited list of DHCP servers.
EOT

[general.timezone]
type=text
description=<<EOT
System's timezone in string format. Supported list: 
http://www.php.net/manual/en/timezones.php
EOT

[network.dhcpdetector]
type=toggle
options=enabled|disabled
description=<<EOT
If enabled, PacketFence will monitor DHCP-specific items such as rogue 
DHCP services, DHCP-based OS fingerprinting, computername/hostname 
resolution, and (optionnally) option-82 location-based information. 
The monitored DHCP packets are DHCPDISCOVERs and DHCPREQUESTs - both 
are broadcasts, meaning a span port is not necessary.  This feature is 
highly recommended if the internal network is DHCP-based.
EOT

[network.dhcpoption82logger]
type=toggle
options=enabled|disabled
description=<<EOT
If enabled PacketFence will monitor DHCP option82 location-based 
information. This feature is only available if the dhcpdetector is 
activated.
EOT

[network.rogue_dhcp_detection]
type=toggle
options=enabled|disabled
description=<<EOT
Tries to identify Rogue DHCP Servers and triggers the 1100010 violation 
if one is found. This feature is only available if the dhcpdetector is 
activated.
EOT

[network.hostname_change_detection]
type=toggle
options=enabled|disabled
description=<<EOT
Will identify hostname changes and send an e-mail with these changes.
This can help detect MAC spoofing.
EOT

[network.dhcp_filter_by_message_types]
type=hidden
options=DHCPDISCOVER|DHCPOFFER|DHCPREQUEST|DHCPDECLINE|DHCPACK|DHCPNAK|DHCPRELEASE|DHCPINFORM
description=<<EOT
Which dhcp message types are being listened by the pfdhcplistener.
Do not change unless you know what you are doing
EOT

[network.force_listener_update_on_ack]
type=toggle
options=enabled|disabled
description=<<EOT
This will only do the iplog update and other DHCP related task on a DHCPACK.
You need to make sure the UDP reflector is in place so this works on the production network.
This is implicitly activated on registration interfaces on which dhcpd runs.
EOT

[network.rogueinterval]
type=numeric
description=<<EOT
When rogue DHCP server detection is enabled, this parameter defines 
how often to email administrators.  With its default setting of 10, 
it will email administrators the details of the previous 10 DHCP 
offers.
EOT

[network.interfaceSNAT]
type=text
description=<<EOT
Choose interface(s) where you want to enable snat for passthrough (by default it's the management interface)
EOT

[proxies]
description=<<EOT
This section allows you to configure locally proxied content.  We 
typically use this to proxy tools like Stinger rather than having to 
continually download the latest version. Ex: 
tools/stinger.exe=http://download.nai.com/products/mcafee-avert/stinger.exe 
The Stinger utility could then be accessed at 
https://pfhostname/proxies/tools/stinger.exe.
EOT

[services.dhcpd]
type=toggle
options=enabled|disabled
description=<<EOT
Should DHCPd be managed by PacketFence?
EOT

[services.haproxy]
type=toggle
options=enabled|disabled
description=<<EOT
Should haproxy be started ? Keep enabled unless you know what you're doing.
EOT

[services.keepalived]
type=toggle
options=enabled|disabled
description=<<EOT
Should keepalived be started ? Keep enabled unless you know what you're doing.
EOT

[services.pfdns]
type=toggle
options=enabled|disabled
description=<<EOT
Should pfdns be managed by PacketFence?
EOT

[services.snort]
type=toggle
options=enabled|disabled
description=<<EOT
Should snort be managed by PacketFence?
EOT

[services.suricata]
type=toggle
options=enabled|disabled
description=<<EOT
Should suricata be managed by PacketFence?
EOT

[services.radiusd]
type=toggle
options=enabled|disabled
description=<<EOT
Should radiusd be managed by PacketFence?
EOT

[services.iptables]
type=toggle
options=enabled|disabled
description=<<EOT
Should iptables be managed by PacketFence? Keep enabled unless you know what you're doing.
EOT

[services.httpd_admin]
type=toggle
options=enabled|disabled
description=<<EOT
Should httpd.admin be started ? Keep enabled unless you know what you're doing.
EOT

[services.httpd_portal]
type=toggle
options=enabled|disabled
description=<<EOT
Should httpd.portal be started ? Keep enabled unless you know what you're doing.
EOT

[services.httpd_parking]
type=toggle
options=enabled|disabled
description=<<EOT
Should httpd.parking be started ? Keep enabled unless you know what you're doing.
EOT

[services.httpd_webservices]
type=toggle
options=enabled|disabled
description=<<EOT
Should httpd.webservices be started ? Keep enabled unless you know what you're doing.
EOT

[services.httpd_aaa]
type=toggle
options=enabled|disabled
description=<<EOT
Should httpd.aaa be started ? Keep enabled unless you know what you're doing.
EOT

[services.httpd_proxy]
type=toggle
options=enabled|disabled
description=<<EOT
Should httpd.proxy be started ? Keep enabled unless you know what you're doing.
EOT

[services.httpd_graphite]
type=toggle
options=enabled|disabled
description=<<EOT
Should httpd.graphite be started ? This is required for some of the dashboard functionality.
EOT

[services.pfsetvlan]
type=toggle
options=enabled|disabled
description=<<EOT
Should pfsetvlan be started ? Keep enabled unless you know what you're doing.
EOT

[services.pfmon]
type=toggle
options=enabled|disabled
description=<<EOT
Should pfmon be started ? Keep enabled unless you know what you're doing.
EOT

[services.snmptrapd]
type=toggle
options=enabled|disabled
description=<<EOT
Should snmptrapd be started ? Keep enabled unless you know what you're doing.
EOT

[services.pfdhcplistener]
type=toggle
options=enabled|disabled
description=<<EOT
Should pfdhcplistener be started ? Keep enabled unless you know what you're doing.
EOT

[services.carbon-cache]
type=toggle
options=enabled|disabled
description=<<EOT
Should carbon-cache be managed by PacketFence?
EOT

[services.carbon-relay]
type=toggle
options=enabled|disabled
description=<<EOT
Should carbon-relay be managed by PacketFence?
EOT

[services.collectd]
type=toggle
options=enabled|disabled
description=<<EOT
Should collectd be managed by PacketFence?
EOT

[services.radsniff]
type=toggle
options=enabled|disabled
description=<<EOT
Should radsniff be managed by PacketFence?
EOT

[services.p0f]
type=toggle
options=enabled|disabled
description=<<EOT
Should p0f be managed by PacketFence?
EOT

[services.statsd]
type=toggle
options=enabled|disabled
description=<<EOT
Should statsd be managed by PacketFence?
EOT

[services.haproxy_binary]
type=text
description=<<EOT
Location of the haproxy binary. Only necessary to change if you are
not running the RPMed version.
EOT

[services.winbindd]
type=toggle
options=enabled|disabled
description=<<EOT
Should winbindd be started ? Keep enabled unless you know what you're doing.
EOT

[services.redis_cache]
type=toggle
options=enabled|disabled
description=<<EOT
Should redis for caching be started ? Keep enabled unless you know what you're doing.
EOT

[services.redis_queue]
type=toggle
options=enabled|disabled
description=<<EOT
Should redis be started ? Keep enabled unless you know what you're doing.
EOT

[services.pfqueue]
type=toggle
options=enabled|disabled
description=<<EOT
Should pfqueue be started ? Keep enabled unless you know what you're doing.
EOT

[services.httpd_binary]
type=text
description=<<EOT
Location of the apache binary. Only necessary to change if you are 
not running the RPMed version.
EOT

[services.iptables_binary]
type=text
description=<<EOT
Location of the iptables binary. Only necessary to change if you are
not running the RPMed version.
EOT

[services.winbindd_binary]
type=text
description=<<EOT
Location of the winbindd binary. Only necessary to change if you are
not running the RPMed version.
EOT

[services.openssl_binary]
type=text
description=<<EOT
Location of the openssl binary. Only necessary to change if you are not 
running the RPMed version.
EOT

[services.dhcpd_binary]
type=text
description=<<EOT
Location of the dhcpd binary. Only necessary to change if you are not 
running the RPMed version.
EOT

[services.radiusd_binary]
type=text
description=<<EOT
Location of the RADIUS binary. Only necessary to change if you are not 
running the RPMed version.
EOT

[services.snmptrapd_binary]
type=text
description=<<EOT
Location of the snmptrapd binary. Only necessary to change if you are 
not running the RPMed version. 
EOT

[services.keepalived_binary]
type=text
description=<<EOT
Location of the keepalived binary. Only necessary to change if you are
not running the RPMed version.
EOT

[services.redis_binary]
type=text
description=<<EOT
Location of the redis binary. Only necessary to change if you are 
not running the packaged version. 
EOT

[services.pfbandwidthd]
type=toggle
options=enabled|disabled
description=<<EOT
Should pfbandwidthd be managed by PacketFence?
EOT

[services.snort_binary]
type=text
description=<<EOT
Location of the snort binary. Only necessary to change if you are not 
running the RPMed version.
EOT

[services.suricata_binary]
type=text
description=<<EOT
Location of the suricata binary.
EOT

[services.carbon-cache_binary]
type=text
description=<<EOT
Location of the carbon-cache binary.
EOT

[services.carbon-relay_binary]
type=text
description=<<EOT
Location of the carbon-relay binary.
EOT

[services.collectd_binary]
type=text
description=<<EOT
Location of the collectd binary.
EOT

[services.radsniff_binary]
type=text
description=<<EOT
Location of the radsniff binary.
EOT

[services.p0f_binary]
type=text
description=<<EOT
Location of the p0f binary.
EOT

[services.statsd_binary]
type=text
description=<<EOT
Location of the statsd (node) binary.
EOT

[services.arp_binary]
type=text
description=<<EOT
Location of the arp binary. Only necessary to change if you are not 
running the RPMed version.
EOT

[services.carbon-cache_order]
type=numeric
description=<<EOT
Order in which the service should be started. 
Lower order services start first and stop last.
EOT

[services.carbon-relay_order]
type=numeric
description=<<EOT
Order in which the service should be started. 
Lower order services start first and stop last.
EOT

[services.collectd_order]
type=numeric
description=<<EOT
Order in which the service should be started. 
Lower order services start first and stop last.
EOT

[services.dhcpd_order]
type=numeric
description=<<EOT
Order in which the service should be started. 
Lower order services start first and stop last.
EOT

[services.haproxy_order]
type=numeric
description=<<EOT
Order in which the service should be started. 
Lower order services start first and stop last.
EOT

[services.httpd_aaa_order]
type=numeric
description=<<EOT
Order in which the service should be started. 
Lower order services start first and stop last.
EOT

[services.httpd_admin_order]
type=numeric
description=<<EOT
Order in which the service should be started. 
Lower order services start first and stop last.
EOT

[services.httpd_graphite_order]
type=numeric
description=<<EOT
Order in which the service should be started. 
Lower order services start first and stop last.
EOT

[services.httpd_portal_order]
type=numeric
description=<<EOT
Order in which the service should be started. 
Lower order services start first and stop last.
EOT

[services.httpd_parking_order]
type=numeric
description=<<EOT
Order in which the service should be started. 
Lower order services start first and stop last.
EOT

[services.httpd_proxy_order]
type=numeric
description=<<EOT
Order in which the service should be started. 
Lower order services start first and stop last.
EOT

[services.httpd_webservices_order]
type=numeric
description=<<EOT
Order in which the service should be started. 
Lower order services start first and stop last.
EOT

[services.iptables_order]
type=numeric
description=<<EOT
Order in which the service should be started. 
Lower order services start first and stop last.
EOT

[services.keepalived_order]
type=numeric
description=<<EOT
Order in which the service should be started. 
Lower order services start first and stop last.
EOT

[services.p0f_order]
type=numeric
description=<<EOT
Order in which the service should be started. 
Lower order services start first and stop last.
EOT

[services.pfbandwidthd_order]
type=numeric
description=<<EOT
Order in which the service should be started. 
Lower order services start first and stop last.
EOT

[services.pfdetect_order]
type=numeric
description=<<EOT
Order in which the service should be started. 
Lower order services start first and stop last.
EOT

[services.pfdhcplistener_order]
type=numeric
description=<<EOT
Order in which the service should be started. 
Lower order services start first and stop last.
EOT

[services.pfdns_order]
type=numeric
description=<<EOT
Order in which the service should be started. 
Lower order services start first and stop last.
EOT

[services.pfmon_order]
type=numeric
description=<<EOT
Order in which the service should be started. 
Lower order services start first and stop last.
EOT

[services.pfqueue_order]
type=numeric
description=<<EOT
Order in which the service should be started. 
Lower order services start first and stop last.
EOT

[services.pfsetvlan_order]
type=numeric
description=<<EOT
Order in which the service should be started. 
Lower order services start first and stop last.
EOT

[services.radiusd_order]
type=numeric
description=<<EOT
Order in which the service should be started. 
Lower order services start first and stop last.
EOT

[services.radsniff_order]
type=numeric
description=<<EOT
Order in which the service should be started. 
Lower order services start first and stop last.
EOT

[services.redis_cache_order]
type=numeric
description=<<EOT
Order in which the service should be started. 
Lower order services start first and stop last.
EOT

[services.redis_queue_order]
type=numeric
description=<<EOT
Order in which the service should be started. 
Lower order services start first and stop last.
EOT

[services.snmptrapd_order]
type=numeric
description=<<EOT
Order in which the service should be started. 
Lower order services start first and stop last.
EOT

[services.snort_order]
type=numeric
description=<<EOT
Order in which the service should be started. 
Lower order services start first and stop last.
EOT

[services.statsd_order]
type=numeric
description=<<EOT
Order in which the service should be started. 
Lower order services start first and stop last.
EOT

[services.suricata_order]
type=numeric
description=<<EOT
Order in which the service should be started. 
Lower order services start first and stop last.
EOT

[services.winbindd_order]
type=numeric
description=<<EOT
Order in which the service should be started. 
Lower order services start first and stop last.
EOT

[trapping.detection]
type=toggle
options=enabled|disabled
description=<<EOT
Enables snort-based worm detection.  If you don't have a span 
interface available, don't bother enabling it.  If you do, you'll most 
definately want this on.
EOT

[trapping.detection_engine]
type=toggle
options=none|snort|suricata
description=<<EOT
Choose between our supported IDS engine.
EOT

[trapping.redirtimer]
type=time
description=<<EOT
How long to display the progress bar during trap release. Default value is 
based on VLAN enforcement techniques. Inline enforcement only users could 
lower the value.
EOT

[trapping.wait_for_redirect]
type=numeric
description=<<EOT
How many seconds the webservice should wait before deassociating or reassigning VLAN. 
If we don't wait, the device may switch VLAN before it has a chance to load the 
redirection page.
EOT

[trapping.range]
type=list
description=<<EOT
Address ranges/CIDR blocks that PacketFence will monitor/detect/trap 
on.  Gateway, network, and broadcast addresses are ignored. 
Comma-delimited entries should be of the form 
 * a.b.c.0/24
 * a.b.c.0-255
 * a.b.c.0-a.b.c.255
 * a.b.c.d
EOT

[trapping.whitelist]
type=list
description=<<EOT
Comma-delimited list of MAC addresses that are immune to isolation. In 
inline Level 2 enforcement, the firewall is opened for them as if they were 
registered. This "feature" will probably be reworked in the future.
EOT

[trapping.passthrough]
type=toggle
options=enabled|disabled
description=<<EOT
When enabled, PacketFence uses pfdns if you defined "Passthroughs" or Apache mod-proxy 
if you defined "Proxy passthroughs" to allow trapped devices to reach web sites.
EOT

[trapping.registration]
type=toggle
options=enabled|disabled
description=<<EOT
If enabled, nodes will be required to register on first network 
access.  Further registration options are configured in the 
registration section.
EOT

[trapping.wireless_ips]
type=toggle
options=enabled|disabled
description=<<EOT
If enabled, we will act on wirelessIPS traps sent by Wireless controllers.
EOT

[trapping.wireless_ips_threshold]
type=text
description=<<EOT
Percentage of matching you want to alert the admin on a wirelessIPS trap.
EOT

[trapping.passthroughs]
type=list
description=<<EOT
Comma-delimited list of domains to be used as HTTP and HTTPS passthroughs to 
web sites. 
The configuration parameter "passthrough" must be enabled for passthroughs 
to be effective.
EOT

[trapping.proxy_passthroughs]
type=merged_list
description=<<EOT
Comma-delimited list of domains to be used with apache passthroughs. 
The configuration parameter "passthrough" must be enabled for passthroughs 
to be effective.
EOT

[trapping.interception_proxy]
type=toggle
options=enabled|disabled
description=<<EOT
If enabled, we will intercept proxy request on the specified ports to 
forward to the captive portal.
EOT

[trapping.interception_proxy_port]
type=list
description=<<EOT
Comma-delimited list of port used by proxy interception.
EOT

[registration.button_text]
type=text
description=<<EOT
The button text will appear on the registration page submit button
EOT

[registration.device_registration]
type=toggle
options=enabled|disabled
description=<<EOT
Enable or Disable the ability to register a gaming device using the specific portal page designed to do it
EOT

[registration.device_registration_role]
type=role
description=<<EOT
The role to assign to gaming devices. If none is selected, the role of the registrant is used.
EOT

[guests_admin_registration.access_duration_choices]
type=text_with_editable_default
description=<<EOT
List of all the choices offered in the access duration action of an 
authentication source.
EOT

[guests_admin_registration.default_access_duration]
type=extended_time
description=<<EOT
This is the default access duration value selected in the dropdown. The value must be part of the 
above list of access duration choices.
EOT

[alerting.log]
type=text
description=<<EOT
Log file where "log" actions are sent.
EOT

[alerting.fromaddr]
type=text
description=<<EOT
Email address from which notifications of rogue DHCP servers, 
violations with an action of "email", or any other 
PacketFence-related message are sent.
Empty means root@<server-domain-name>.
EOT

[alerting.emailaddr]
type=text
description=<<EOT
Email address to which notifications of rogue DHCP servers, violations 
with an action of "email", or any other PacketFence-related message 
goes to.
EOT

[alerting.smtpserver]
type=text
description=<<EOT
Server through which to send messages to the above emailaddr.  The 
default is localhost - be sure you're running an SMTP host locally if 
you don't change it!
EOT

[alerting.subjectprefix]
type=text
description=<<EOT
Subject prefix for email notifications of rogue DHCP servers, 
violations with an action of "email", or any other PacketFence-related 
message.
EOT

[ports.admin]
type=text
description=<<EOT
Port the administrative interface listens on.
EOT

[ports.soap]
type=text
description=<<EOT
Port of the soap webservice.
EOT

[ports.aaa]
type=text
description=<<EOT
httpd listening port for AAA webservice
EOT

[ports.pf_status]
type=text
description=<<EOT
httpd listening port for PacketFence Status webservice
EOT

[ports.httpd_portal_modstatus]
type=text
description=<<EOT
Port the mod_status for httpd.portal listens on.
EOT

[interface.ip]
type=text
description=<<EOT
IP address of the named interface - note that this should mirror the 
OS-level configuration but it does not make any OS-level changes.
EOT

[interface.mask]
type=text
description=<<EOT
Network mask of the named interface.
EOT

[interface.type]
type=multi
options=internal|management|managed|monitor|dhcplistener|dhcp-listener|high-availability|portal
description=<<EOT
Describes type of the named interface.
 * "internal" describes interfaces where PacketFence will enforce network access.
 * "management" (or managed) interfaces have the administrative GUI running on them, host SNMP trap receiver and RADIUS server.
 * "monitor" is the interface that snort listens on.
 * "dhcp-listener" is an interface where the DHCP traffic is coming in either via a network SPAN or IP-Helpers configuration.
 * "high-availability" is for an interface between two PacketFence servers dedicated to high-availability (drbd, corosync).
 * "portal" interface have the captive-portal running on them without the need of having any enforcement mechanism.
EOT

[interface.enforcement]
type=toggle
options=vlan|inlinel2|inlinel3|inline
description=<<EOT
Describes the technique PacketFence will use to enforce network access.
VLAN is the out-of-band VLAN-based device isolation requiring integration 
in your network environment and inline is a DHCP-based mode where 
PacketFence acts as a filtering gateway.
EOT

[scan.engine]
type=toggle
options=none|openvas|nessus
description=<<EOT
Which scan engine to use to perform client-side policy compliance.
EOT

[scan.registration]
type=toggle
options=enabled|disabled
description=<<EOT
If this option is enabled, the PF system will scan each host after 
registration is complete.
EOT

[scan.duration]
type=time
description=<<EOT
Approximate duration of a scan. User being scanned on registration are presented 
a progress bar for this duration, afterwards the browser refreshes until scan is 
complete.
EOT

[scan.host]
type=text
description=<<EOT
Host the scanning engine is running on.  For performance reasons, we 
recommend running the scanning engine on a remote server. A passthrough will 
be automagically created.
EOT

[scan.user]
type=text
description=<<EOT
Username to log into scanning engine with.
EOT

[scan.pass]
type=text
description=<<EOT
Password to log into scanning engine with.
EOT

[scan.nessus_port]
type=text
description=<<EOT
Remote port of the Nessus scanning engine. Default value should be fine in 
most cases.
EOT

[scan.nessus_clientpolicy]
type=text
description=<<EOT
Name of the policy inside the NessusClient file
EOT

[scan.openvas_port]
type=text
description=<<EOT
Remote port of the OpenVAS scanning engine. Default value should be fine in 
most cases.
EOT

[scan.openvas_configid]
type=text
description=<<EOT
ID of the scanning configuration on the OpenVAS server
EOT

[scan.openvas_reportformatid]
type=text
description=<<EOT
ID of the .NBE report format on the OpenVAS server
EOT

[database.host]
type=text
description=<<EOT
Server the mysql server is running on.
EOT

[database.port]
type=numeric
description=<<EOT
Port the mysql server is running on.
EOT

[database.db]
type=text
description=<<EOT
Name of the mysql database used by PacketFence.
EOT

[database.user]
type=text
description=<<EOT
Username of the account with access to the mysql database used by 
PacketFence.
EOT

[database.pass]
type=text
description=<<EOT
Password for the mysql database used by PacketFence.
EOT

[vlan.closelocationlogonstop]
type=toggle
options=enabled|disabled
description=<<EOT
Should open locationlog entries be closed when pfsetvlan is 
stopped
EOT

[vlan.nbtraphandlerthreads]
type=text
description=<<EOT
Number of trap handler threads pfsetvlan should start
EOT

[vlan.nbtrapparserthreads]
type=text
description=<<EOT
Number of trap parser threads pfsetvlan should start
EOT

[vlan.bounce_duration]
type=time
description=<<EOT
Delay to wait between the shut / no-shut on a port. Some OS need a higher value 
than others. Default should be reasonable for almost every OS but is too long 
for the usual proprietary OS.
EOT

[vlan.trap_limit]
type=toggle
options=enabled|disabled
description=<<EOT
Controls whether or not the trap limit feature is enabled. Trap limiting is 
a way to limit the damage done by malicious users or misbehaving switch 
that sends too many traps to PacketFence causing it to be overloaded. Trap 
limiting is controlled by the trap limit threshold and trap limit action 
parameters. Default is enabled.
EOT

[vlan.trap_limit_threshold]
type=numeric
description=<<EOT
Maximum number of SNMP traps that a switchport can send to PacketFence within 
a minute without being flagged as DoS. Defaults to 100.
EOT

[vlan.trap_limit_action]
type=multi
options=email|shut
description=<<EOT
Action that PacketFence will take if the vlan.trap_limit_threshold is reached. 
Defaults to none. email will send an email every hour if the limit's still reached. 
shut will shut the port on the switch and will also send an email even if email is not 
specified.
EOT

[inline.ports_redirect]
type=text
description=<<EOT
Ports to intercept and redirect for trapped and unregistered systems.  Defaults 
to 80/tcp (HTTP), 443/tcp (HTTPS). Redirecting 443/tcp (SSL) will work, 
although users might get certificate errors if you didn't install a valid 
certificate or if you don't use DNS (although IP-based certificates supposedly 
exist). 
Redirecting 53/udp (DNS) seems to have issues and is also not recommended.
EOT

[inline.should_reauth_on_vlan_change]
type=toggle
options=enabled|disabled
description=<<EOT
Should have to reauthenticate the node if vlan change
EOT

[inline.interfaceSNAT]
type=list
description=<<EOT
Comma-delimited list of interfaces used to SNAT inline level 2 traffic
EOT

[inline.accounting]
type=toggle
options=enabled|disabled
description=<<EOT
Should we handle accouting data for inline clients? 
This controls inline accouting tasks in pfmon.
EOT

[inline.layer3_accounting_session_timeout]
type=text
description=<<EOT
Accounting sessions created by pfbandwidthd that haven't 
been updated for more than this amount of seconds will be considered 
inactive. 
This should be higher than the interval at which pfmon runs 
Defaults to 300 - 5 minutes
EOT

[inline.layer3_accounting_sync_interval]
type=text
description=<<EOT
Interval at which pfbandwidthd should dump collected information into the database. 
This should be lower than the interval at which pfmon runs. 
Defaults to 41 seconds
EOT

[servicewatch.email]
type=toggle
options=enabled|disabled
description=<<EOT
Should pfcmd service pf watch send an email when services are not running? 
You must make sure to call the watch command. Installing it in the cron is the 
recommended approach: 
*/5 * * * * /usr/local/pf/bin/pfcmd service pf watch
EOT

[servicewatch.restart]
type=toggle
options=enabled|disabled
description=<<EOT
Should pfcmd service pf watch restart PF when services are not running? 
You must make sure to call the watch command. Installing it in the cron is the 
recommended approach: 
*/5 * * * * /usr/local/pf/bin/pfcmd service pf watch
EOT

[captive_portal.network_detection]
type=toggle
options=enabled|disabled
description=<<EOT
Enable the automatic network detection feature for registration auto-redirect
EOT

[captive_portal.network_detection_ip]
type=text
description=<<EOT
This IP is used as the webserver who hosts the 
common/network-access-detection.gif which is used to detect if network access 
was enabled. It cannot be a domain name since it is used in registration or 
quarantine where DNS is blackholed. It is recommended that you allow your users 
to reach your PacketFence server and put your LAN's PacketFence IP. By default 
we will make this reach PacketFence's website as an easy solution.
EOT

[captive_portal.image_path]
type=text
description=<<EOT
This is the path where the gif is on the webserver to detect if the network access
has been enabled.
EOT

[captive_portal.loadbalancers_ip]
type=text
description=<<EOT
If the captive portal is put behind load-balancer(s) that act at Layer 7 
(HTTP level) effectively doing reverse proxying then the captive portal no 
longer sees the IP of the node trying to access the portal. In that case, 
the load-balancers must do SSL offloading and add a X-Forwarded-By header 
in the HTTP traffic they forward to PacketFence. Most do by default. Then 
in this parameter you must specify the IP of the various load balancers. 
This will instruct the captive portal to look for client IPs in the 
X-Forwarded-For instead of the actual TCP session when it matches an IP 
in the list. Format is a comma separated list of IPs. Note: Apache access 
log format is not changed to automatically log the X-Forwarded-By header. 
Modify conf/httpd.conf.d/captive-portal-common.conf to use 
load balanced combined instead of combined in CustomLog statement.
EOT

[captive_portal.secure_redirect]
type=toggle
options=enabled|disabled
description=<<EOT
Force the captive portal to use HTTPS when redirecting captured clients.
EOT

[captive_portal.status_only_on_production]
type=toggle
options=enabled|disabled
description=<<EOT
When enabled the /status page will only be available on the
production network. By default this is disabled
EOT

[captive_portal.detection_mecanism_bypass]
type=toggle
options=enabled|disabled
description=<<EOT
Bypass the captive-portal detection mechanism of some browsers / end-points by proxying the detection request.
EOT

[captive_portal.detection_mecanism_urls]
type=merged_list
description=<<EOT
Comma-delimited list of URLs known to be used by devices to detect the presence 
of a captive portal and trigger their captive portal mechanism.
EOT

[captive_portal.wispr_redirection]
type=toggle
options=enabled|disabled
description=<<EOT
Enable or disable WISPr redirection capabilities on the captive-portal
EOT

[captive_portal.httpd_mod_qos]
type=toggle
options=enabled|disabled
description=<<EOT
Enable mod_qos for the captive-portal
EOT

[captive_portal.httpd_mod_qos_maximum_connections_per_device]
type=numeric
description=<<EOT
The maximum number of connections per device
EOT

[captive_portal.httpd_mod_evasive]
type=toggle
options=enabled|disabled
description=<<EOT
Enable mod_evasive for the captive-portal
EOT

[captive_portal.httpd_mod_evasive_white_list]
type=list
description=<<EOT
Comma delimited IP addresses or networks CIDR format of trusted clients can be added to the whitelist to ensure they are never denied.
EOT

[captive_portal.httpd_mod_evasive_hash_table_size]
type=numeric
description=<<EOT
The hash table size defines the number of top-level nodes for each child's hash table. Increasing this number will provide faster performance by decreasing the number of iterations required to get to the record, but consume more memory for table space. You should increase this if you have a busy web server.
EOT

[captive_portal.httpd_mod_evasive_page_count]
type=numeric
description=<<EOT
The limit for the number of requests for the same page per page interval by an IP address. Once the threshold for that interval has been exceeded, the IP address of the client will be added to the blocked list.
EOT

[captive_portal.httpd_mod_evasive_page_interval]
type=numeric
description=<<EOT
The interval in seconds for the page count threshold.
EOT

[captive_portal.httpd_mod_evasive_site_count]
type=numeric
description=<<EOT
The limit for the total number of requests for the portal by an IP address per site interval.
EOT

[captive_portal.httpd_mod_evasive_site_interval]
type=numeric
description=<<EOT
The interval in seconds for the site count threshold.
EOT

[captive_portal.httpd_mod_evasive_blocking_period]
type=numeric
description=<<EOT
The amount of time (in seconds) that a client will be blocked for if they are added to the blocking list. During this time, all subsequent requests from the client will result in a 403 (Forbidden) and the timer being reset (e.g. another 10 seconds). Since the timer is reset for every subsequent request, it is not necessary to have a long blocking period; in the event of a DoS attack, this timer will keep getting reset.
EOT

[captive_portal.httpd_mod_evasive_email_notify]
type=text
description=<<EOT
If this value is set, an email will be sent to the address specified whenever an IP address becomes blacklisted.
EOT

[captive_portal.httpd_mod_evasive_system_command]
type=text
description=<<EOT
If this value is set, the system command specified will be executed whenever an IP address becomes blacklisted. This is designed to enable system calls to ip filter or other tools. A locking mechanism using /tmp prevents continuous system calls. Use %s to denote the IP address of the blacklisted IP, use %t to use the mod evasive blocking period value. The default value will insert the device ip in ipset session for 10 seconds and deny the access to the portal.
EOT

[advanced.reevaluate_access_reasons]
type=multi
options=node_modify|manage_register|manage_deregister|manage_vclose|manage_vopen|violation_modify|violation_add|violation_delete|redir.cgi|pfcmd_vlan|admin_modify
description=<<EOT
After which calls to pfcmd do we have to re-evaluate the state of a node and 
re-assign VLAN or change iptables rules
EOT

[advanced.sso_on_access_reevaluation]
type=toggle
options=enabled|disabled
description=<<EOT
Trigger Single-Sign-On (Firewall SSO) on access reevaluation
EOT

[advanced.record_accounting_in_sql]
type=toggle
options=enabled|disabled
description=<<EOT
Record the accounting data in the SQL tables.
Requires a restart of radiusd to be effective.
EOT

[advanced.pfcmd_error_color]
type=toggle
options=red|green|yellow|blue|magenta|cyan
description=<<EOT
Color of the error text for pfcmd
EOT

[advanced.pfcmd_warning_color]
type=toggle
options=yellow|green|red|blue|magenta|cyan
description=<<EOT
Color of the warning text for pfcmd
EOT

[advanced.pfcmd_success_color]
type=toggle
options=green|red|yellow|blue|magenta|cyan
description=<<EOT
Color of the success text for pfcmd
EOT

[advanced.hash_passwords]
type=toggle
options=plaintext|bcrypt|ntlm
description=<<EOT
The algorithm used to hash the passwords in the database.
This will only affect newly created or reset passwords.
EOT

[advanced.hashing_cost]
type=numeric
description=<<EOT
The cost factor to apply to the password hashing if applicable.
Currently only applies to bcrypt.
EOT

[advanced.disable_pf_domain_auth]
type=toggle
options=enabled|disabled
description=<<EOT
Disable Active-Directory domain configuration from within PacketFence
EOT

[advanced.ldap_attributes]
type=merged_list
description=<<EOT
List of LDAP attributes that can be used in the sources configuration
EOT

[advanced.pfdns_processes]
type=text
description=<<EOT
Amount of pfdns processes to start
EOT

[advanced.update_iplog_with_accounting]
type=toggle
options=enabled|disabled
description=<<EOT
Use the information included in the accounting to update the iplog
EOT

[advanced.locationlog_close_on_accounting_stop]
type=toggle
options=enabled|disabled
description=<<EOT
Close the locationlog for a node on accounting stop
EOT

[advanced.timing_stats_level]
type=numeric
description=<<EOT
Level of timing stats to keep - 0 is the lowest - 10 the highest amount to log
Do not change unless you know what you are doing
EOT

[advanced.pfdhcplistener_packet_size]
type=numeric
minimum=576
description=<<EOT
Set the max size of DHCP packets
Do not change unless you know what you are doing
EOT

[omapi.ip2mac_lookup]
type=toggle
options=enabled|disabled
description=<<EOT
Use OMAPI to query DHCPd for the MAC address of a given IP address
EOT

[omapi.mac2ip_lookup]
type=toggle
options=enabled|disabled
description=<<EOT
Use OMAPI to query DHCPd for the IP address of a given MAC address
EOT

[omapi.key_name]
type=text
description=<<EOT
The OMAPI key name for signing messages
EOT

[omapi.key_base64]
type=text
description=<<EOT
The OMAPI base64 key for signing messages
EOT

[omapi.port]
type=text
description=<<EOT
The OMAPI port number
EOT

[omapi.host]
type=text
description=<<EOT
The OMAPI host
EOT

[omapi.timeout]
type=text
description=<<EOT
The timeout on the OMAPI socket
EOT

[provisioning.autoconfig]
type=toggle
options=enabled|disabled
description=<<EOT
Enable or Disable the generation of a pre-built XML mobile configuration profile for iPhone, iPad, or iPod users
EOT

[provisioning.ssid]
type=text
description=<<EOT
The hidden SSID where the user should connect to after registration
EOT

[provisioning.category]
type=text
description=<<EOT
Apply to node that are members of the following category
EOT

[provisioning.certificate]
type=text
description=<<EOT
Path of the ca certificate
EOT

[node_import.pid]
type=text
description=<<EOT
Default pid value to assign to imported nodes.
EOT

[node_import.category]
type=text
description=<<EOT
Default category to assign to imported nodes.
EOT

[node_import.voip]
type=toggle
options=yes|no
description=<<EOT
By default is an imported node a Voice over IP device or not?
EOT

[webservices.user]
type=text
description=<<EOT
The webservices user name
EOT

[webservices.pass]
type=text
description=<<EOT
The webservices password
EOT

[webservices.host]
type=text
description=<<EOT
The webservices host
EOT

[webservices.proto]
type=text
description=<<EOT
The webservices proto
EOT

[webservices.port]
type=text
description=<<EOT
The webservices port
EOT

[webservices.aaa_port]
type=text
description=<<EOT
The AAA webservice port
EOT

[maintenance.iplog_rotation_window]
type=time
description=<<EOT
How long to keep iplog history entry before rotating it to iplog archive
EOT

[maintenance.iplog_rotation_interval]
type=time
description=<<EOT
At which interval to run the iplog history rotation job
EOT

[maintenance.iplog_rotation_batch]
type=numeric
description=<<EOT
How many iplog history entries to rotate in one job
EOT

[maintenance.iplog_rotation_timeout]
type=time
description=<<EOT
How long a iplog history rotation job can take before being killed
EOT

[maintenance.iplog_cleanup_window]
type=time
description=<<EOT
How long to keep a iplog archive entry before deleting it
EOT

[maintenance.iplog_cleanup_interval]
type=time
description=<<EOT
At which interval to run the iplog archive cleanup job
EOT

[maintenance.iplog_cleanup_batch]
type=numeric
description=<<EOT
How many iplog archive entries to clean up in one job
EOT

[maintenance.iplog_cleanup_timeout]
type=time
description=<<EOT
How long a iplog archive cleanup job can take before being killed
EOT

[maintenance.locationlog_cleanup_window]
type=time
description=<<EOT
How long to keep a locationlog entry before deleting it
EOT

[maintenance.locationlog_cleanup_interval]
type=time
description=<<EOT
At which interval to run the locationlog cleanup job
EOT

[maintenance.locationlog_cleanup_batch]
type=numeric
description=<<EOT
How many locationlog entries to clean up in one job
EOT

[maintenance.locationlog_cleanup_timeout]
type=time
description=<<EOT
How long a locationlog cleanup job can take before being killed
EOT

[maintenance.auth_log_cleanup_window]
type=time
description=<<EOT
How long to keep an auth_log entry before deleting it
EOT

[maintenance.auth_log_cleanup_interval]
type=time
description=<<EOT
At which interval to run the auth_log cleanup job
EOT

[maintenance.auth_log_cleanup_batch]
type=numeric
description=<<EOT
How many auth_log entries to clean up in one job
EOT

[maintenance.auth_log_cleanup_timeout]
type=time
description=<<EOT
How long an auth_log cleanup job can take before being killed
EOT

[maintenance.traplog_cleanup_window]
type=time
description=<<EOT
How long to keep a traplog entry before deleting it
EOT

[maintenance.traplog_cleanup_interval]
type=time
description=<<EOT
At which interval to run the traplog cleanup job
EOT

[maintenance.radius_audit_log_cleanup_window]
type=time
description=<<EOT
How long to keep a radius audit log entry before deleting it
EOT

[maintenance.radius_audit_log_cleanup_interval]
type=time
description=<<EOT
At which interval to run the radius audit log cleanup job
EOT

[maintenance.radius_audit_log_cleanup_batch]
type=numeric
description=<<EOT
How many radius audit log entries to clean up in one job
EOT

[maintenance.radius_audit_log_cleanup_timeout]
type=time
description=<<EOT
How long a radius audit log cleanup job can take before being killed
EOT

[maintenance.node_cleanup_window]
type=time
description=<<EOT
How long to keep a node entry before deleting it
EOT

[maintenance.node_cleanup_interval]
type=time
description=<<EOT
Interval at which PacketFence runs node cleanup
EOT

[maintenance.nodes_maintenance_interval]
type=time
description=<<EOT
Interval at which PacketFence runs nodes maintenance
EOT

[maintenance.person_cleanup]
type=toggle
options=enabled|disabled
description=<<EOT
Users that do not own any device will be deleted.
Locally created users will only be deleted when their account expires.
EOT

[maintenance.person_cleanup_interval]
type=time
description=<<EOT
Interval at which PacketFence runs person cleanup
EOT

[maintenance.online_node_count_interval]
type=time
description=<<EOT
Interval at which PacketFence updates the online node count
EOT

[maintenance.violation_maintenance_interval]
type=time
description=<<EOT
Interval at which PacketFence runs violation maintenance
EOT

[maintenance.violation_maintenance_batch]
type=numeric
description=<<EOT
How many violations does pfmon batches
EOT

[maintenance.violation_maintenance_timeout]
type=time
description=<<EOT
How long is the violation maintenance task is allowed to run
EOT

[maintenance.inline_accounting_maintenance_interval]
type=time
description=<<EOT
Interval at which PacketFence runs inline accounting maintenance
EOT

[maintenance.acct_maintenance_interval]
type=time
description=<<EOT
Interval at which PacketFence runs accounting maintenance
EOT

[maintenance.provisioning_compliance_poll_interval]
type=time
description=<<EOT
Interval at which PacketFence runs the polling enforcement on the provisioners.
EOT

[maintenance.fingerbank_data_update_interval]
type=time
description=<<EOT
Interval at which PacketFence updates the local Fingerbank data from the cloud API
EOT

[maintenance.option_82_task_interval]
type=time
description=<<EOT
Interval at which PacketFence will query compatibles switches for option 82 switch mac address
EOT


[active_active.password]
type=text
description=<<EOT
Shared KEY for VRRP protocol (must be the same on all members).
EOT

[active_active.virtual_router_id]
type=text
description=<<EOT
The virtual router id for keepalive. Leave untouched unless you have another keepalive cluster in this network.
EOT

[active_active.dns_on_vip_only]
type=toggle
options=enabled|disabled
description=<<EOT
Set the name server option in DHCP replies to point only to the VIP in cluster mode rather than to all servers in the cluster.
EOT

[active_active.centralized_deauth]
type=toggle
options=enabled|disabled
description=<<EOT
Centralize the deauthentication to the management node of the cluster.
EOT

[active_active.auth_on_management]
type=toggle
options=enabled|disabled
description=<<EOT
Process RADIUS authentication requests on the management server (the current load balancer).
Disabling it will make the management server only proxy requests to other servers.
Useful if your load balancer cannot handle both tasks.
Changing this requires to restart radiusd.
EOT

[monitoring.graphite_host]
type=text
description=<<EOT
Host to which graphite metrics are sent.
EOT

[monitoring.graphite_port]
type=numeric
description=<<EOT
Port on the graphite host to which metrics are sent.
EOT

[monitoring.db_port]
type=numeric
description=<<EOT
The port to connect to the database storing the Graphite dashboard settings. 
Will default to database.port if none is provided.
EOT

[monitoring.db_host]
type=text
description=<<EOT
The hostname of the the database storing the Graphite dashboard settings. 
Will default to database.host if none is provided.
EOT

[monitoring.db_user]
type=text
description=<<EOT
The username to access the database storing the Graphite dashboard settings. 
Will default to database.user if none is provided.
EOT

[monitoring.db_pass]
type=obfuscated
description=<<EOT
The password to access the database storing the Graphite dashboard settings. 
Will default to database.pass if none is provided.
EOT

[metascan.api_key]
type=text
description=<<EOT
OPSWAT Metadefender Cloud Scanner API key
EOT

[metascan.query_url_hash]
type=text
description=<<EOT
OPSWAT Metadefender Cloud Scanner URL for hash queries
EOT

[parking.lease_length]
type=numeric
description=<<EOT
Lease length (in seconds) when a device is in parking
EOT

[parking.threshold]
type=numeric
description=<<EOT
The threshold (in seconds) after which a device will be placed in parking.
A value of 0 deactivates the parking detection.
The detection works by looking at the time in seconds a device has been in the registration role and comparing it with this threshold.
EOT

[parking.place_in_dhcp_parking_group]
type=toggle
options=enabled|disabled
description=<<EOT
Place the device in the DHCP parking group when it is detected doing parking
EOT

[parking.show_parking_portal]
type=toggle
options=enabled|disabled
description=<<EOT
Show the parking portal to the device instead of the usual portal
EOT
